---
interface Props {
  title?: string;
  description?: string;
}

const { title = 'Forge', description = 'A modern Git forge for teams and OSS' } = Astro.props as Props;
import '../styles/global.css';
import ServerHeader from '../components/server/Header.astro';
---

<html lang="en" class="h-full" data-theme="rosepine">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
  </head>
  <body class="min-h-full bg-background text-foreground">
    <script is:inline>
      // Early theme init to avoid FOUC
      (function () {
        try {
          const root = document.documentElement
          const mode = localStorage.getItem('fp-theme-mode') || 'auto'
          const brand = localStorage.getItem('fp-theme-brand') || 'rosepine'
          root.setAttribute('data-theme', brand)
          const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches
          const isDark = mode === 'dark' || (mode === 'auto' && prefersDark)
          root.classList.toggle('dark', isDark)
        } catch {}
      })()
    </script>
    <ServerHeader server:defer />
    <slot />
  </body>
  
</html>
